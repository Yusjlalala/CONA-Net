# path for saving trained models
checkpoint_dir: './checkpoint'
# path for saving prediction results
pred_dir: './predictions'

# model name and input/output channels
model:
  name: CONANet
  input_channels: 1
  output_channels: 1

# trainer initiation
train:
  train_mode: k_fold
  # k-fold training
  num_fold: 5
  # batch size of each iteration
  batch_size: 2
  # num of epoch
  epochs: NUM_EPOCHS
  # validation per [X] epoch
  validate_after_epochs: X
  # max iterations
  max_num_iterations: MAX_ITERATIONS

  # For dataset import and transformation, and separating train and val datasets
  data_loader:
    # data loading threads
    num_workers: 32
    # name of dataset
    dataset_name: IXI
    # path for TRAINING dataset
    data_path: "ABSOLUTE/PATH/TO/YOUR/TRAINING/DATA"
    # Crop Data to a FIX size
    patch_size: [W, H, Slice]
    # Crop Center
    patch_center: [W, H, Slice]

# loss function
loss:
  name: AdaptiveRegionalEdgeDiceCLDiceLoss # EdgeDiceCLDiceLoss  # EdgeReinforceLoss # AdaptiveRegionalEdgeDiceCLDiceLoss
  # a target value that is ignored and does not contribute to the input gradient
  ignore_index: null
  # skip the last channel in the target (i.e. when last channel contains data not relevant for the loss)
  skip_last_target: true
  # threshold ONLY for ER loss
  threshold: 0.8
  # partition_size ONLY for "Adaptive Region Speciﬁc Loss"
  partition_size: 16 # e.g. 16*16*16

# optimizer
optimizer:
  # 选择合适的optimizer
  name: Adam
  # initial learning rate
  learning_rate: 0.001
  # weight decay
  weight_decay: 0.0005

# learning rate
lr_scheduler:
  name: ReduceLROnPlateau
  # make sure to use the 'min' mode cause lower AdaptedRandError is better
  mode: min
  factor: 0.5
  patience: 30

# evaluation metrics
eval_metric:
  name: BinaryMetrics
  # physical voxel space depending on data
  voxel_spacing: [Z, X, Y] #  [Z, X, Y](mm)

# test (same as prediction)
test:
  # data loading threads
  num_workers: 32
  # path for TEST dataset
  data_path: "ABSOLUTE/PATH/TO/YOUR/TEST/DATA"





